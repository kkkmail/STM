(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     51470,       1059]
NotebookOptionsPosition[     51188,       1045]
NotebookOutlinePosition[     51555,       1061]
CellTagsIndexPosition[     51512,       1058]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Author", ":", " ", 
     RowBox[{"Konstantin", " ", 
      RowBox[{"K", ".", "Konstantinov"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Summary", ":", " ", 
     RowBox[{"Various", " ", "test", " ", "calculations", " ", "for", " ", 
      RowBox[{"STM", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Copyright", ":", " ", 
      RowBox[{"K", "^", "3"}]}]}], ",", " ", 
    RowBox[{"2013", " ", "-", " ", "2014"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Version", ":", " ", 
      RowBox[{"Revision", ":", " ", 
       RowBox[{"1.20", ".001"}]}]}]}], ",", " ", 
    RowBox[{"Date", ":", " ", 
     RowBox[{
      RowBox[{"2014", "/", "01"}], "/", "12"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Mathematica", " ", 
     RowBox[{"Version", ":", " ", 
      RowBox[{"7.0", " ", "-", " ", "9.0"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "===", "="}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "STMTests", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PlotSeparateDeltaLambda", " ", "\[Rule]", " ", "False"}], ",",
        " ", 
       RowBox[{"PlotDetailedResults", " ", "\[Rule]", " ", "False"}], ",", 
       " ", 
       RowBox[{"PlotCombinedResults", " ", "\[Rule]", " ", "True"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Test", " ", "of", " ", "RunNDSolve", " ", "and", " ", 
     RowBox[{"related", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TestRunNDSolve", "[", 
      RowBox[{
       RowBox[{"runID_", "?", "IntegerQ"}], ",", 
       RowBox[{"tMax_", "?", "NumericQ"}], ",", 
       RowBox[{"noOfTsteps_", "?", "IntegerQ"}], ",", "gradLinearFunc_", ",", 
       RowBox[{"returnTangentialGradient_", "?", "BooleanQ"}], ",", 
       "rawOpts___"}], " ", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sol", ",", "pltOpts", ",", "f", ",", "tPlotMultiplier", ",", "tPlot",
          ",", "t", ",", "DeltaT", ",", "tIdx", ",", "tVal", ",", "stl", ",", 
         "st", ",", "solValue", ",", "lambda", ",", "eXXT", ",", "gValLinear",
          ",", "gValMatrix", ",", "deltaLambda", ",", "deltaLambdaSorted", 
         ",", "idx", ",", "coeffIdx", ",", "stlSorted", ",", "stlSortedTbl", 
         ",", "solValueTbl", ",", "lambdaTbl", ",", "deltaLambdaSortedTbl", 
         ",", "sValFuncTbl", ",", "opts", ",", "plotSeparateDeltaLambdaVal", 
         ",", "plotDetailedResultsVal", ",", "plotCombinedResultsVal", ",", 
         "lambdaFuncTbl", ",", "deltaLambdaFuncTbl", ",", "xRangeFuncTbl", 
         ",", "xRangeSigmaFuncTbl"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<TestRunNDSolve::Testing RunNDSolve for runID = \>\"", ",", " ", 
          "runID"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<CoeffF4 = \>\"", ",", " ", 
          RowBox[{"CoeffF4", " ", "//", " ", "MatrixForm"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<CoeffF6 = \>\"", ",", " ", 
          RowBox[{"CoeffF6", " ", "//", " ", "MatrixForm"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<returnTangentialGradient = \>\"", ",", " ", 
          "returnTangentialGradient"}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"opts", "=", 
         RowBox[{"ProcessOptions", "[", "rawOpts", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"plotSeparateDeltaLambdaVal", "=", 
         RowBox[{
          RowBox[{"PlotSeparateDeltaLambda", " ", "/.", "opts"}], " ", "/.", 
          RowBox[{"Options", "[", "STMTests", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"plotDetailedResultsVal", "=", 
         RowBox[{
          RowBox[{"PlotDetailedResults", " ", "/.", "opts"}], " ", "/.", 
          RowBox[{"Options", "[", "STMTests", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"plotCombinedResultsVal", "=", 
         RowBox[{
          RowBox[{"PlotCombinedResults", " ", "/.", "opts"}], " ", "/.", 
          RowBox[{"Options", "[", "STMTests", "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"RunNDSolve", "[", 
          RowBox[{
          "runID", ",", "tMax", ",", "gradLinearFunc", ",", 
           "returnTangentialGradient", ",", 
           RowBox[{"ODEPrintInfo", " ", "\[Rule]", " ", "False"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<Plot\>\"", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"f", "=", 
         RowBox[{"sEvolution", "/.", " ", 
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tPlotMultiplier", "=", "0.99"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tPlot", "=", 
         RowBox[{"tPlotMultiplier", "*", 
          RowBox[{
           RowBox[{"f", "[", "\"\<Domain\>\"", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<tPlot = \>\"", ",", " ", "tPlot"}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pltOpts", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", " ", 
           RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", " ", 
           RowBox[{"PlotStyle", " ", "\[Rule]", " ", "Thick"}], ",", " ", 
           RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
           RowBox[{"PlotPoints", " ", "\[Rule]", " ", "200"}], ",", " ", 
           RowBox[{"Method", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"PlotDivision", " ", "\[Rule]", " ", "1"}], "}"}]}], ",",
            " ", 
           RowBox[{"ImageSize", " ", "\[Rule]", " ", "IMAGESIZE"}]}], "}"}]}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
        "Print", "[", 
         "\"\<StdDevLinear[f[t]], MeanLinear[f[t]], and (MeanLinear[f[t]] / \
StdDevLinear[f[t]]).\>\"", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Re", "[", 
             RowBox[{"StdDevLinear", "[", 
              RowBox[{"f", "[", "t", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tPlot"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", "pltOpts", "]"}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"MeanLinear", "[", 
             RowBox[{"f", "[", "t", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tPlot"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", "pltOpts", "]"}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Re", "[", 
             RowBox[{
              RowBox[{"MeanLinear", "[", 
               RowBox[{"f", "[", "t", "]"}], "]"}], "/", 
              RowBox[{"StdDevLinear", "[", 
               RowBox[{"f", "[", "t", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tPlot"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", "pltOpts", "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"DeltaT", "=", 
         RowBox[{"tPlot", "/", "noOfTsteps"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"PrintTimeUsed", "[", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
           "===", "===", "===", "===", "==="}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"plotCombinedResultsVal", ",", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"stlSortedTbl", "=", 
             RowBox[{"Table", "[", 
              RowBox[{"Indeterminate", ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "0", ",", "noOfTsteps"}], "}"}]}], "]"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"solValueTbl", "=", 
             RowBox[{"Table", "[", 
              RowBox[{"Indeterminate", ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "0", ",", "noOfTsteps"}], "}"}]}], "]"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"deltaLambdaSortedTbl", " ", "=", 
             RowBox[{"Table", "[", 
              RowBox[{"Indeterminate", ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "0", ",", "noOfTsteps"}], "}"}]}], "]"}]}],
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
            "Print", "[", 
             "\"\<TestRunNDSolve::Creating table of results.\>\"", "]"}], ";",
             "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"tIdx", "=", "0"}], ",", 
              RowBox[{"tIdx", " ", "\[LessEqual]", " ", "noOfTsteps"}], ",", 
              RowBox[{"tIdx", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"tVal", "=", 
                 RowBox[{"DeltaT", "*", "tIdx"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"stl", "=", 
                 RowBox[{"f", "[", "tVal", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"st", "=", 
                 RowBox[{"ToMatrix", "[", "stl", "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"stlSorted", "=", 
                 RowBox[{"Sort", "[", "stl", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"solValue", "=", 
                 RowBox[{"FindUncorrelatedCoordinates", "[", "st", "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"lambda", "=", 
                 RowBox[{"GetLambda", "[", "solValue", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"eXXT", "=", 
                 RowBox[{"GetE", "[", "solValue", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"gValLinear", "=", 
                 RowBox[{"GradientMultiplier", "*", 
                  RowBox[{"gradLinearFunc", "[", 
                   RowBox[{"stl", ",", "returnTangentialGradient"}], 
                   "]"}]}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"gValMatrix", "=", 
                 RowBox[{"ToMatrix", "[", "gValLinear", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"deltaLambda", "=", 
                 RowBox[{"CalculateDeltaLambda", "[", 
                  RowBox[{"gValMatrix", ",", "eXXT"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"deltaLambdaSorted", "=", 
                 RowBox[{"SortByFirst", "[", 
                  RowBox[{"lambda", ",", "deltaLambda"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"stlSortedTbl", "[", 
                  RowBox[{"[", 
                   RowBox[{"tIdx", "+", "1"}], "]"}], "]"}], "=", 
                 "stlSorted"}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"solValueTbl", "[", 
                  RowBox[{"[", 
                   RowBox[{"tIdx", "+", "1"}], "]"}], "]"}], "=", 
                 "solValue"}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"deltaLambdaSortedTbl", "[", 
                  RowBox[{"[", 
                   RowBox[{"tIdx", "+", "1"}], "]"}], "]"}], "=", 
                 "deltaLambdaSorted"}], ";"}], "\[IndentingNewLine]", ")"}]}],
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
            "Print", "[", 
             "\"\<Sorted values of ALL sab, Lambda and Delta Lambda.\>\"", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"sValFuncTbl", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"SValFunc", "[", 
                RowBox[{"idx", ",", 
                 RowBox[{"stlSortedTbl", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "0", ",", "noOfTsteps"}], "}"}]}], "]"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"lambdaFuncTbl", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"LambdaFunc", "[", 
                RowBox[{"idx", ",", 
                 RowBox[{"solValueTbl", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "0", ",", "noOfTsteps"}], "}"}]}], "]"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"deltaLambdaFuncTbl", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"DeltaLambdaFunc", "[", 
                 RowBox[{"idx", ",", 
                  RowBox[{"deltaLambdaSortedTbl", "[", 
                   RowBox[{"[", 
                    RowBox[{"ii", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "0", ",", "noOfTsteps"}], "}"}]}], "]"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"xRangeFuncTbl", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"xRangeFunc", "[", 
                RowBox[{"idx", ",", 
                 RowBox[{"solValueTbl", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "0", ",", "noOfTsteps"}], "}"}]}], "]"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"xRangeSigmaFuncTbl", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"xRangeSigmaFunc", "[", 
                RowBox[{"idx", ",", 
                 RowBox[{"solValueTbl", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "0", ",", "noOfTsteps"}], "}"}]}], "]"}]}],
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{"sValFuncTbl", ",", 
                RowBox[{"{", 
                 RowBox[{"idx", ",", "1", ",", "NA"}], "}"}], ",", 
                RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}], 
              ",", 
              RowBox[{"Plot", "[", 
               RowBox[{"lambdaFuncTbl", ",", 
                RowBox[{"{", 
                 RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
                RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}], 
              ",", 
              RowBox[{"Plot", "[", 
               RowBox[{"deltaLambdaFuncTbl", ",", 
                RowBox[{"{", 
                 RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
                RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "\"\<x range and x sigma range.\>\"", "]"}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{"xRangeFuncTbl", ",", 
                RowBox[{"{", 
                 RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
                RowBox[{"Evaluate", "[", "pltOpts", "]"}]}], "]"}], ",", 
              RowBox[{"Plot", "[", 
               RowBox[{"xRangeSigmaFuncTbl", ",", 
                RowBox[{"{", 
                 RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
                RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}]}], 
             "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
           "===", "===", "===", "===", "==="}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"plotDetailedResultsVal", ",", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"tIdx", "=", "0"}], ",", 
              RowBox[{"tIdx", " ", "\[LessEqual]", " ", "noOfTsteps"}], ",", 
              RowBox[{"tIdx", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", "strSeparatorSmall", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", "strSeparatorSmall", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tVal", "=", 
                 RowBox[{"DeltaT", "*", "tIdx"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<tIdx = \>\"", ",", " ", "tIdx", ",", " ", 
                  "\"\<, t = \>\"", ",", " ", "tVal"}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"stl", "=", 
                 RowBox[{"f", "[", "tVal", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"st", "=", 
                 RowBox[{"ToMatrix", "[", "stl", "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                "Print", "[", "\"\<Plotting sorted values of sab.\>\"", "]"}],
                 ";", "\[IndentingNewLine]", 
                RowBox[{"stlSorted", "=", 
                 RowBox[{"Sort", "[", "stl", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"SValFunc", "[", 
                    RowBox[{"idx", ",", "stlSorted"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"idx", ",", "1", ",", "NA"}], "}"}], ",", 
                   RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}], 
                 "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                "Print", "[", "\"\<Finding uncorrelated coordinates.\>\"", 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"solValue", "=", 
                 RowBox[{"FindUncorrelatedCoordinates", "[", "st", "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"lambda", "=", 
                 RowBox[{"GetLambda", "[", "solValue", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"eXXT", "=", 
                 RowBox[{"GetE", "[", "solValue", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"PlotUncorrelatedCoordinates", "[", 
                 RowBox[{"NNN", ",", "solValue", ",", "0", ",", 
                  RowBox[{"\"\<values for t = \>\"", " ", "<>", " ", 
                   RowBox[{"ToString", "[", "tVal", "]"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                "Print", "[", "\"\<DeltaLambdaFunc for ALL.\>\"", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"gValLinear", "=", 
                 RowBox[{"GradientMultiplier", "*", 
                  RowBox[{"gradLinearFunc", "[", 
                   RowBox[{"stl", ",", "returnTangentialGradient"}], 
                   "]"}]}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"gValMatrix", "=", 
                 RowBox[{"ToMatrix", "[", "gValLinear", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"deltaLambda", "=", 
                 RowBox[{"CalculateDeltaLambda", "[", 
                  RowBox[{"gValMatrix", ",", "eXXT"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"deltaLambdaSorted", "=", 
                 RowBox[{"SortByFirst", "[", 
                  RowBox[{"lambda", ",", "deltaLambda"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"DeltaLambdaFunc", "[", 
                    RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}],
                    "]"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Re", "[", 
                    RowBox[{"DeltaLambdaFunc", "[", 
                    RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"Im", "[", 
                    RowBox[{"DeltaLambdaFunc", "[", 
                    RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], "]"}]}],
                     "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
                   RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"PrintTimeUsed", "[", "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                 "plotSeparateDeltaLambdaVal", ",", "\[IndentingNewLine]", 
                  RowBox[{"(", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"coeffIdx", " ", "=", " ", "1"}], ",", " ", 
                    RowBox[{"coeffIdx", "\[LessEqual]", " ", "NoOfTermsF4"}], 
                    ",", " ", 
                    RowBox[{"coeffIdx", "++"}], ",", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CoeffF4", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "coeffIdx"}], "]"}], "]"}], " ", 
                    "\[NotEqual]", " ", "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<DeltaLambdaFunc for \>\"", ",", " ", 
                    RowBox[{"TermMatrix", "[", 
                    RowBox[{"[", "coeffIdx", "]"}], "]"}], ",", " ", 
                    "\"\<.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"gValLinear", "=", 
                    RowBox[{"GradientMultiplier", "*", 
                    RowBox[{"CoeffF4", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "coeffIdx"}], "]"}], "]"}], "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"GradP4FuncList", "[", 
                    RowBox[{"[", "coeffIdx", "]"}], "]"}], ")"}], "[", 
                    RowBox[{
                    "st", ",", "returnTangentialGradient", ",", "True"}], 
                    "]"}]}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"gValMatrix", "=", 
                    RowBox[{"ToMatrix", "[", "gValLinear", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"deltaLambda", "=", 
                    RowBox[{"CalculateDeltaLambda", "[", 
                    RowBox[{"gValMatrix", ",", "eXXT"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"deltaLambdaSorted", "=", 
                    RowBox[{"SortByFirst", "[", 
                    RowBox[{"lambda", ",", "deltaLambda"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Re", "[", 
                    RowBox[{"DeltaLambdaFunc", "[", 
                    RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"Im", "[", 
                    RowBox[{"DeltaLambdaFunc", "[", 
                    RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}],
                     "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"PrintTimeUsed", "[", "]"}], ";"}], 
                    "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
                    "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CoeffF6", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "idxD6T0Cabababababab"}], "]"}], "]"}], 
                    " ", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", 
                    "\"\<DeltaLambdaFunc for Cabababababab.\>\"", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gValLinear", "=", 
                    RowBox[{"GradientMultiplier", "*", 
                    RowBox[{"CoeffF6", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "idxD6T0Cabababababab"}], "]"}], "]"}], 
                    "*", 
                    RowBox[{"GradP6T0Cabababababab", "[", 
                    RowBox[{"st", ",", "returnTangentialGradient"}], 
                    "]"}]}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"gValMatrix", "=", 
                    RowBox[{"ToMatrix", "[", "gValLinear", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"deltaLambda", "=", 
                    RowBox[{"CalculateDeltaLambda", "[", 
                    RowBox[{"gValMatrix", ",", "eXXT"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"deltaLambdaSorted", "=", 
                    RowBox[{"SortByFirst", "[", 
                    RowBox[{"lambda", ",", "deltaLambda"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Re", "[", 
                    RowBox[{"DeltaLambdaFunc", "[", 
                    RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"Im", "[", 
                    RowBox[{"DeltaLambdaFunc", "[", 
                    RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}],
                     "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"PrintTimeUsed", "[", "]"}], ";"}], 
                    "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
                    "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
               ")"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
           "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
           "===", "===", "===", "===", "==="}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "sol", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "==="}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Test", " ", "various", " ", "gradient", " ", "numerically", " ", "using",
      " ", "brute", " ", "force", " ", 
     RowBox[{"method", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TestF4GradientsNumeric", "[", 
      RowBox[{
       RowBox[{"sol", ":", 
        RowBox[{"{", "__", "}"}]}], ",", 
       RowBox[{"startRunID_", "?", "IntegerQ"}], ",", 
       RowBox[{"endRunID_", "?", "IntegerQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "invIdx", ",", "tngIdx", ",", "runID", ",", "gValLinear", ",", 
         "gValMatrix", ",", "deltaLambda", ",", "deltaLambdaSorted", ",", 
         "lambda", ",", "eXXT"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<TestF4GradientsNumeric::Testing various gradients numerically \
using brute force method...\>\"", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"lambda", "=", 
         RowBox[{"GetLambda", "[", "sol", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"eXXT", "=", 
         RowBox[{"GetE", "[", "sol", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"invIdx", "=", "1"}], ",", 
          RowBox[{"invIdx", " ", "\[LessEqual]", "2"}], ",", " ", 
          RowBox[{"invIdx", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"invIdx", " ", "\[Equal]", "1"}], ",", 
              RowBox[{"ReturnInvariants", "=", "False"}], ",", 
              RowBox[{"ReturnInvariants", "=", "True"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "strSeparator", "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"tngIdx", "=", "1"}], ",", 
              RowBox[{"tngIdx", " ", "\[LessEqual]", "2"}], ",", " ", 
              RowBox[{"tngIdx", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"tngIdx", " ", "\[Equal]", "1"}], ",", 
                  RowBox[{"ReturnTangentialGradient", "=", "False"}], ",", 
                  RowBox[{"ReturnTangentialGradient", "=", "True"}]}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Print", "[", "strSeparator", "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"runID", "=", "startRunID"}], ",", " ", 
                  RowBox[{"runID", " ", "\[LessEqual]", " ", "endRunID"}], 
                  ",", 
                  RowBox[{"runID", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"(", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Running for runID = \>\"", ",", " ", "runID", ",", 
                    " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"ReturnInvariants", ",", 
                    RowBox[{"\"\<, invariant name = \>\"", " ", "<>", " ", 
                    RowBox[{"InvariantMatrix", "[", 
                    RowBox[{"[", "runID", "]"}], "]"}]}], ",", 
                    RowBox[{"\"\<, term name = \>\"", " ", "<>", " ", 
                    RowBox[{"TermMatrix", "[", 
                    RowBox[{"[", "runID", "]"}], "]"}]}]}], "]"}], ",", " ", 
                    "\"\<, TangentialGradient = \>\"", ",", 
                    RowBox[{
                    "ToString", "[", "ReturnTangentialGradient", "]"}], ",", 
                    " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    "ReturnInvariants", ",", " ", 
                    "\"\<, using INVARIANTS.\>\"", ",", " ", 
                    "\"\<, using COEFFICIENTS.\>\""}], "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"ResetCoeffF4", "[", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"UpdateCoeffF4", "[", 
                    RowBox[{"runID", ",", "1"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gValLinear", "=", 
                    RowBox[{"Grad4NumericLinearFunc", "[", 
                    RowBox[{
                    "SIL", ",", "ReturnInvariants", ",", 
                    "ReturnTangentialGradient"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gValMatrix", "=", 
                    RowBox[{"ToMatrix", "[", "gValLinear", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"deltaLambda", "=", 
                    RowBox[{"CalculateDeltaLambda", "[", 
                    RowBox[{"gValMatrix", ",", "eXXT"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"deltaLambdaSorted", "=", 
                    RowBox[{"SortByFirst", "[", 
                    RowBox[{"lambda", ",", "deltaLambda"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", "\"\<DeltaLambdaFunc\>\"", "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"DeltaLambdaFunc", "[", 
                    RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}],
                     "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"PrintTimeUsed", "[", "]"}], ";"}], 
                   "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
                 "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
           ")"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"PrintTimeUsed", "[", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "==="}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Test", " ", "all", " ", "known", " ", "symbolic", " ", 
     RowBox[{"(", "fast", ")"}], " ", "expressions", " ", "for", " ", "F4", 
     " ", 
     RowBox[{"gradients", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TestF4GradientsFast", "[", 
      RowBox[{"sol", ":", 
       RowBox[{"{", "__", "}"}]}], "]"}], ":=", 
     RowBox[{"TestF4GradientsFast", "[", 
      RowBox[{"sol", ",", "1", ",", "23"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TestF4GradientsFast", "[", 
      RowBox[{
       RowBox[{"sol", ":", 
        RowBox[{"{", "__", "}"}]}], ",", 
       RowBox[{"startRunID_", "?", "IntegerQ"}], ",", 
       RowBox[{"endRunID_", "?", "IntegerQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "lambda", ",", "eXXT", ",", "ReturnTangentialGradient", ",", 
         "ReturnInvariants", ",", "tngIdx", ",", "gValLinear", ",", 
         "gValMatrix", ",", "deltaLambda", ",", "deltaLambdaSorted", ",", 
         "idx"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<TestF4GradientsFast::Testing various gradients...\>\"", "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"lambda", "=", 
         RowBox[{"GetLambda", "[", "sol", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"eXXT", "=", 
         RowBox[{"GetE", "[", "sol", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "strSeparator", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ReturnTangentialGradient", "=", "True"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ReturnInvariants", "=", "True"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "strSeparator", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"tngIdx", "=", "1"}], ",", 
          RowBox[{"tngIdx", " ", "\[LessEqual]", "2"}], ",", " ", 
          RowBox[{"tngIdx", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"tngIdx", " ", "\[Equal]", "1"}], ",", 
              RowBox[{"ReturnTangentialGradient", "=", "False"}], ",", 
              RowBox[{"ReturnTangentialGradient", "=", "True"}]}], "]"}], ";",
             "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "strSeparator", "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Running for term name = \>\"", ",", " ", 
              RowBox[{"TermMatrix", "[", 
               RowBox[{"[", "idxD4T0Cabbddfaf", "]"}], "]"}], ",", " ", 
              "\"\<, TangentialGradient = \>\"", ",", 
              RowBox[{"ToString", "[", "ReturnTangentialGradient", "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"gValLinear", "=", 
             RowBox[{"Grad4T0Cabbddfaf", "[", 
              RowBox[{"SI", ",", "ReturnTangentialGradient"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"gValMatrix", "=", 
             RowBox[{"ToMatrix", "[", "gValLinear", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"deltaLambda", "=", 
             RowBox[{"CalculateDeltaLambda", "[", 
              RowBox[{"gValMatrix", ",", "eXXT"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"deltaLambdaSorted", "=", 
             RowBox[{"SortByFirst", "[", 
              RowBox[{"lambda", ",", "deltaLambda"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "\"\<DeltaLambdaFunc\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"DeltaLambdaFunc", "[", 
                RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
               RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"PrintTimeUsed", "[", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Running for EXT grad term name = \>\"", ",", " ", 
              RowBox[{"TermMatrix", "[", 
               RowBox[{"[", "idxD4T0Cabbddfaf", "]"}], "]"}], ",", " ", 
              "\"\<, TangentialGradient = \>\"", ",", 
              RowBox[{"ToString", "[", "ReturnTangentialGradient", "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"gValLinear", "=", 
             RowBox[{"Grad4T0CabbddfafEXT", "[", 
              RowBox[{"SI", ",", "ReturnTangentialGradient"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"gValMatrix", "=", 
             RowBox[{"ToMatrix", "[", "gValLinear", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"deltaLambda", "=", 
             RowBox[{"CalculateDeltaLambda", "[", 
              RowBox[{"gValMatrix", ",", "eXXT"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"deltaLambdaSorted", "=", 
             RowBox[{"SortByFirst", "[", 
              RowBox[{"lambda", ",", "deltaLambda"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "\"\<DeltaLambdaFunc\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"DeltaLambdaFunc", "[", 
                RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
               RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"PrintTimeUsed", "[", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "strSeparatorSmall", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Running for term name = \>\"", ",", " ", 
              RowBox[{"TermMatrix", "[", 
               RowBox[{"[", "idxD4T0Cabababab", "]"}], "]"}], ",", " ", 
              "\"\<, TangentialGradient = \>\"", ",", 
              RowBox[{"ToString", "[", "ReturnTangentialGradient", "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"gValLinear", "=", 
             RowBox[{"Grad4T0Cabababab", "[", 
              RowBox[{"SI", ",", "ReturnTangentialGradient"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"gValMatrix", "=", 
             RowBox[{"ToMatrix", "[", "gValLinear", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"deltaLambda", "=", 
             RowBox[{"CalculateDeltaLambda", "[", 
              RowBox[{"gValMatrix", ",", "eXXT"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"deltaLambdaSorted", "=", 
             RowBox[{"SortByFirst", "[", 
              RowBox[{"lambda", ",", "deltaLambda"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "\"\<DeltaLambdaFunc\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"DeltaLambdaFunc", "[", 
                RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
               RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}], 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "strSeparatorSmall", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Running for term name = \>\"", ",", " ", 
              RowBox[{"TermMatrixF6", "[", 
               RowBox[{"[", "idxD6T0Cabababababab", "]"}], "]"}], ",", " ", 
              "\"\<, TangentialGradient = \>\"", ",", 
              RowBox[{"ToString", "[", "ReturnTangentialGradient", "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"gValLinear", "=", 
             RowBox[{"Grad6T0Cabababababab", "[", 
              RowBox[{"SI", ",", "ReturnTangentialGradient"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"gValMatrix", "=", 
             RowBox[{"ToMatrix", "[", "gValLinear", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"deltaLambda", "=", 
             RowBox[{"CalculateDeltaLambda", "[", 
              RowBox[{"gValMatrix", ",", "eXXT"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"deltaLambdaSorted", "=", 
             RowBox[{"SortByFirst", "[", 
              RowBox[{"lambda", ",", "deltaLambda"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "\"\<DeltaLambdaFunc\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"DeltaLambdaFunc", "[", 
                RowBox[{"idx", ",", "deltaLambdaSorted"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"idx", ",", "1", ",", "NNN"}], "}"}], ",", 
               RowBox[{"Evaluate", "[", "defaultPltOpts", "]"}]}], "]"}], 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"PrintTimeUsed", "[", "]"}], ";"}], "\[IndentingNewLine]",
            ")"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "strSeparator", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "==="}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.589626915800032*^9, 3.589627138967263*^9}, {
   3.58962717084383*^9, 3.58962717232828*^9}, {3.589627207267499*^9, 
   3.589627302037786*^9}, {3.589627523548684*^9, 3.5896275628474965`*^9}, {
   3.5896275974273214`*^9, 3.5896276120686655`*^9}, {3.5896278032030697`*^9, 
   3.589627916802408*^9}, {3.58962797588344*^9, 3.5896281458761787`*^9}, {
   3.58962828491427*^9, 3.5896282911333256`*^9}, {3.5896312103685074`*^9, 
   3.589631300919841*^9}, {3.5896313534536753`*^9, 3.589631359219584*^9}, {
   3.589631390814889*^9, 3.5896314212226334`*^9}, {3.5896314519585195`*^9, 
   3.589631641389717*^9}, 3.589632045553624*^9, {3.589644872979744*^9, 
   3.589644899684185*^9}, {3.58964545508492*^9, 3.589645459038241*^9}, {
   3.5896801157877746`*^9, 3.5896802904518948`*^9}, 3.589680336699627*^9, 
   3.5899149945497394`*^9, {3.589935270408188*^9, 3.589935306545203*^9}, {
   3.589935337223591*^9, 3.5899353908682404`*^9}, {3.58993543370315*^9, 
   3.5899354910012293`*^9}, {3.5899371998917537`*^9, 3.5899372817922907`*^9}, 
   3.5899382381399555`*^9, {3.589938292276621*^9, 3.58993831829634*^9}, 
   3.5899408599966354`*^9, {3.5899417381480494`*^9, 3.589941746431555*^9}, {
   3.589942213863185*^9, 3.589942271749653*^9}, {3.590098590914763*^9, 
   3.5900986423309326`*^9}, {3.5900986799379244`*^9, 3.590098730777711*^9}, {
   3.590098952021738*^9, 3.5900989634373255`*^9}, {3.590098995665743*^9, 
   3.5900992694436836`*^9}, {3.5900994161061487`*^9, 3.590099419256242*^9}, {
   3.5900994551190753`*^9, 3.5900995669774113`*^9}, {3.590099606495673*^9, 
   3.5900996459508934`*^9}, 3.5901010928074093`*^9, {3.5901011295858507`*^9, 
   3.5901011468733387`*^9}, {3.5901015233625364`*^9, 3.59010153150895*^9}, {
   3.590102023239732*^9, 3.5901021373795853`*^9}, {3.5901023521152887`*^9, 
   3.590102352357449*^9}, {3.5901026106410923`*^9, 3.590102643341824*^9}, {
   3.5901034337550964`*^9, 3.5901034878790655`*^9}, {3.590103586937896*^9, 
   3.5901036448954124`*^9}, 3.5901037304472656`*^9, {3.590103821901041*^9, 
   3.5901039677469645`*^9}, {3.5901040621476994`*^9, 3.590104190318876*^9}, {
   3.590104285120877*^9, 3.590104311186199*^9}, {3.5901046711864376`*^9, 
   3.5901047731461964`*^9}, {3.5901048140033484`*^9, 
   3.5901049477252145`*^9}, {3.5901050504174595`*^9, 3.5901050743153396`*^9}, 
   3.5901051442293234`*^9, {3.5901054638226976`*^9, 3.590105485521117*^9}, {
   3.5901055346007347`*^9, 3.5901055629565773`*^9}, {3.590105651667531*^9, 
   3.5901056563456397`*^9}, {3.5901056940997295`*^9, 3.59010588914835*^9}, 
   3.5902535270072985`*^9, 3.598801129307191*^9}]
},
WindowSize->{1893, 1192},
WindowMargins->{{85, Automatic}, {Automatic, 69}},
Magnification->1.5,
FrontEndVersion->"7.0 for Microsoft Windows (64-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 50639, 1023, 7496, "Input"]
}
]
*)

(* End of internal cache information *)
