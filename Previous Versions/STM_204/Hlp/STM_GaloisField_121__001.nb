(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     46333,        989]
NotebookOptionsPosition[     45590,        961]
NotebookOutlinePosition[     45958,        977]
CellTagsIndexPosition[     45915,        974]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "FiniteFields`"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"strSeparator", "=", "\"\<===========================\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NP", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NPMAX", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrimeNP", "=", 
   RowBox[{"Prime", "[", "NP", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NSMAXSQ", "=", 
   RowBox[{"Floor", "[", 
    RowBox[{"Sqrt", "[", "PrimeNP", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NSMAX", "=", "PrimeNP"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NS", "=", "5"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "==="}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IMAGESIZE", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultPltOpts", ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
      RowBox[{"ImageSize", " ", "\[Rule]", "IMAGESIZE"}]}], " ", "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BooleanQ", "[", "x_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{"x", ",", "Booleans"}], "]"}], ",", "True", ",", "False", ",", 
      "False"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "==="}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<NP = \>\"", ",", " ", "NP"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<NS = \>\"", ",", " ", "NS"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<PrimeNP (NP-th prime number) = \>\"", ",", " ", "PrimeNP"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<NSMAXSQ (square root of NP-th prime number) = \>\"", ",", " ", 
    "NSMAXSQ"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<NSMAX = \>\"", ",", " ", "NSMAX"}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "==="}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Function", " ", "to", " ", "plot", " ", 
    RowBox[{"vectors", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IndexedVariableFunc", "[", 
     RowBox[{
      RowBox[{"idxVal_", "?", "NumericQ"}], ",", 
      RowBox[{"vect_", "?", "VectorQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"idx", ",", "retVal", ",", "len"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"len", "=", 
        RowBox[{"Length", "[", "vect", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"idx", "=", 
        RowBox[{"Round", "[", "idxVal", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"retVal", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"idx", "<", "1"}], "||", 
           RowBox[{"idx", ">", "len"}]}], ",", "Indeterminate", ",", 
          RowBox[{"vect", "[", 
           RowBox[{"[", "idx", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "retVal", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Function", ",", " ", 
    RowBox[{
    "which", " ", "returns", " ", "Galois", " ", "field", " ", "analog", " ", 
     "of", " ", "integer", " ", "number", " ", 
     RowBox[{"(", "nn", ")"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Nfunc", "[", 
     RowBox[{"gf_", ",", 
      RowBox[{"nn_", "?", "IntegerQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"retVal", ",", "ii"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"retVal", "=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"gf", "[", 
           RowBox[{"{", "1", "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", "nn"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "retVal", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Function", ",", " ", 
    RowBox[{
    "which", " ", "returns", " ", "Galois", " ", "field", " ", "analog", " ", 
     "of", " ", 
     RowBox[{"(", 
      RowBox[{"1", "/", "nn"}], ")"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OneDivNfunc", "[", 
     RowBox[{"gf_", ",", 
      RowBox[{"nn_", "?", "IntegerQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xN", ",", "retVal", ",", "ii"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xN", "=", 
        RowBox[{"Nfunc", "[", 
         RowBox[{"gf", ",", "nn"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"retVal", "=", 
        RowBox[{
         RowBox[{"gf", "[", 
          RowBox[{"{", "1", "}"}], "]"}], "/", "xN"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "retVal", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Function", ",", " ", 
    RowBox[{
    "which", " ", "returns", " ", "Galois", " ", "field", " ", "analog", " ", 
     "of", " ", 
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinusOneFunc", "[", "gf_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "retVal", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"retVal", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"gf", "[", 
           RowBox[{"{", "0", "}"}], "]"}], "-", 
          RowBox[{"gf", "[", 
           RowBox[{"{", "1", "}"}], "]"}]}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "retVal", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Function", ",", " ", 
    RowBox[{
    "which", " ", "returns", " ", "Galois", " ", "field", " ", "analog", " ", 
     "of", " ", 
     RowBox[{"(", 
      RowBox[{"-", "nn"}], ")"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinusNfunc", "[", 
     RowBox[{"gf_", ",", 
      RowBox[{"nn_", "?", "IntegerQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"retVal", ",", "ii"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"retVal", "=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"MinusOneFunc", "[", "gf", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", "nn"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "retVal", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Function", ",", " ", 
    RowBox[{
    "which", " ", "returns", " ", "Galois", " ", "field", " ", "analog", " ", 
     "of", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "nn"}], ")"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OneDivMinusNfunc", "[", 
     RowBox[{"gf_", ",", 
      RowBox[{"nn_", "?", "IntegerQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xm1N", ",", "retVal", ",", "ii"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xm1N", "=", 
        RowBox[{"MinusNfunc", "[", 
         RowBox[{"gf", ",", "nn"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"retVal", "=", 
        RowBox[{
         RowBox[{"gf", "[", 
          RowBox[{"{", "1", "}"}], "]"}], "/", "xm1N"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "retVal", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"strSeparator", ",", "strSeparator"}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Function", ",", " ", 
    RowBox[{
    "which", " ", "returns", " ", "maximum", " ", "\"\<number\>\"", " ", "in",
      " ", "Galois", " ", "field"}], ",", " ", 
    RowBox[{
    "which", " ", "is", " ", "\"\<equivalent\>\"", " ", "to", " ", "an", " ", 
     "integer"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxGaloisInt", "[", 
     RowBox[{
      RowBox[{"np_", "?", "IntegerQ"}], ",", 
      RowBox[{"printProgress_", "?", "BooleanQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "gf", ",", "x0", ",", "x1", ",", "xm1", ",", "xN", ",", "xmN", ",", 
        "fldTbl", ",", "PrimeNP", ",", "ii", ",", "x1dN", ",", "x1dmN", ",", 
        "jj", ",", "xTst", ",", "brkReq"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"printProgress", ",", 
         RowBox[{
         "Print", "[", "\"\<Constructing Galois field (gf).\>\"", "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"PrimeNP", "=", 
        RowBox[{"Prime", "[", "np", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fldTbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "0", ",", 
            RowBox[{"PrimeNP", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gf", "=", 
        RowBox[{"GF", "[", "PrimeNP", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"brkReq", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"x0", "=", 
        RowBox[{"gf", "[", 
         RowBox[{"{", "0", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x1", "=", 
        RowBox[{"gf", "[", 
         RowBox[{"{", "1", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"xm1", "=", 
        RowBox[{"x0", "-", "x1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"xN", "=", "x0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"xmN", "=", "x0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fldTbl", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"ToElementCode", "[", "x0", "]"}], "+", "1"}], "]"}], 
         "]"}], " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fldTbl", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"ToElementCode", "[", "x1", "]"}], "+", "1"}], "]"}], 
         "]"}], " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fldTbl", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"ToElementCode", "[", "xm1", "]"}], "+", "1"}], "]"}], 
         "]"}], " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Print", "[", "fldTbl", "]"}], ";"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"ii", "=", "1"}], ",", 
         RowBox[{"ii", " ", "<", " ", "PrimeNP"}], ",", " ", 
         RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"printProgress", ",", 
             RowBox[{"Print", "[", "strSeparator", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"xN", "=", 
            RowBox[{"xN", "+", "x1"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"x1dN", "=", 
            RowBox[{"x1", "/", "xN"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"xmN", "=", 
            RowBox[{"xmN", "+", "xm1"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"x1dmN", "=", 
            RowBox[{"x1", "/", "xmN"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"printProgress", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<ii = \>\"", ",", " ", "ii", ",", "\"\<, xN = \>\"", ",", 
               " ", "xN", ",", " ", "\"\<, xmN = \>\"", ",", " ", "xmN", ",", 
               "\"\<, x1dN = \>\"", ",", "x1dN", ",", " ", 
               "\"\<, x1dmN = \>\"", ",", " ", "x1dmN"}], "]"}]}], "]"}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ii", " ", "\[GreaterEqual]", "2"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{"printProgress", ",", 
                 RowBox[{"Print", "[", "\"\<Testing (N)\>\"", "]"}]}], "]"}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"xTst", "=", "xN"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"fldTbl", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    "]"}], "]"}], "\[Equal]", "0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"fldTbl", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    "]"}], "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
                  ")"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Break", "[", "]"}], ";"}], "\[IndentingNewLine]", 
                  ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{"printProgress", ",", 
                 RowBox[{"Print", "[", "\"\<Testing (1/N)\>\"", "]"}]}], 
                "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"xTst", "=", "x1dN"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"fldTbl", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    "]"}], "]"}], "\[Equal]", "0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"fldTbl", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    "]"}], "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
                  ")"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Break", "[", "]"}], ";"}], "\[IndentingNewLine]", 
                  ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{"printProgress", ",", 
                 RowBox[{"Print", "[", "\"\<Testing (-N)\>\"", "]"}]}], "]"}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"xTst", "=", "xmN"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"fldTbl", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    "]"}], "]"}], "\[Equal]", "0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"fldTbl", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    "]"}], "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
                  ")"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Break", "[", "]"}], ";"}], "\[IndentingNewLine]", 
                  ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{"printProgress", ",", 
                 RowBox[{"Print", "[", "\"\<Testing (-1/N)\>\"", "]"}]}], 
                "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"xTst", "=", "x1dmN"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"fldTbl", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    "]"}], "]"}], "\[Equal]", "0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"fldTbl", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    "]"}], "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
                  ")"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Break", "[", "]"}], ";"}], "\[IndentingNewLine]", 
                  ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{"printProgress", ",", 
                 RowBox[{
                 "Print", "[", 
                  "\"\<Testing everything between (-N) and (N) in steps (1/N)\
\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"xTst", "=", "xmN"}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"jj", "=", "0"}], ",", 
                 RowBox[{"jj", "\[LessEqual]", " ", 
                  RowBox[{"2", "*", 
                   RowBox[{"ii", "^", "2"}]}]}], ",", 
                 RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{"printProgress", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<jj = \>\"", ",", " ", "jj", ",", " ", 
                    "\"\<, number = \>\"", ",", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ii"}], "+", 
                    RowBox[{"jj", "/", "ii"}]}], ")"}], ",", 
                    "\"\<, xTst = \>\"", ",", " ", "xTst", ",", " ", 
                    "\"\<, ToElementCode[xTst] + 1 = \>\"", ",", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    ")"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"fldTbl", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    "]"}], "]"}], "\[Equal]", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"fldTbl", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ToElementCode", "[", "xTst", "]"}], "+", "1"}], 
                    "]"}], "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
                    ")"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"brkReq", "=", "True"}], ";"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"Break", "[", "]"}], ";"}], " ", "*)"}], 
                    "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"xTst", "=", 
                    RowBox[{"xTst", "+", "x1dN"}]}], ";"}], 
                  "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"brkReq", ",", 
                  RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], " ", "*)"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
          ")"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"printProgress", ",", "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<ii = \>\"", ",", " ", "ii"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<NSMAXSQ = \>\"", ",", " ", "NSMAXSQ"}], "]"}], ";"}],
           "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "ii", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "===", "===", "===", "==="}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<MaxGaloisInt\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mxgi", "=", 
   RowBox[{"MaxGaloisInt", "[", 
    RowBox[{"NP", ",", "False"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<MaxGaloisInt[\>\"", ",", "NP", ",", "\"\<] = \>\"", ",", " ", 
     "mxgi"}], "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<MaxGaloisIntArr\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParallelNeeds", "[", "\"\<FiniteFields`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DistributeDefinitions", "[", 
   RowBox[{"MaxGaloisInt", ",", "NPMAX"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MaxGaloisIntArr", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"MaxGaloisInt", "[", 
      RowBox[{"ii", ",", "False"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", "NPMAX"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<MaxGaloisIntArr = \>\"", ",", " ", "MaxGaloisIntArr"}], 
    "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Print", "[", "fldTbl", "]"}], ";"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<xN\>\"", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"xN", "=", 
     RowBox[{
      RowBox[{"Nfunc", "[", 
       RowBox[{"gf", ",", "NS"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"ToElementCode", "[", "xN", "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<x1dN\>\"", "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"x1dN", "=", 
     RowBox[{
      RowBox[{"OneDivNfunc", "[", 
       RowBox[{"gf", ",", "NS"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"ToElementCode", "[", "x1dN", "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<xNC\>\"", "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xNC", "=", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{"x1dN", ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "NS"}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ToElementCode", "[", "xNC", "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<m1\>\"", "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"m1", "=", 
     RowBox[{
      RowBox[{"MinusOneFunc", "[", "gf", "]"}], "\[IndentingNewLine]", 
      RowBox[{"ToElementCode", "[", "m1", "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<xm1N\>\"", "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xm1N", "=", 
     RowBox[{
      RowBox[{"MinusNfunc", "[", 
       RowBox[{"gf", ",", "NS"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"ToElementCode", "[", "xm1N", "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<xm1dN\>\"", "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xm1dN", "=", 
     RowBox[{
      RowBox[{"OneDivMinusNfunc", "[", 
       RowBox[{"gf", ",", "NS"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"ToElementCode", "[", "xm1dN", "]"}]}]}]}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5971296834765105`*^9, 3.597129683761702*^9}, {
   3.5971297418041506`*^9, 3.597129774862052*^9}, {3.5971298176013613`*^9, 
   3.5971302185909977`*^9}, {3.597184855281782*^9, 3.5971849026341534`*^9}, {
   3.597184962465787*^9, 3.597185260495214*^9}, {3.5971852921882086`*^9, 
   3.597185321298493*^9}, {3.5971853528303814`*^9, 3.5971853830193787`*^9}, {
   3.5971854293128653`*^9, 3.5971855565425377`*^9}, {3.5971855934456596`*^9, 
   3.5971857449347343`*^9}, {3.5971857955747824`*^9, 3.597185810923951*^9}, {
   3.597185877537375*^9, 3.5971859411109533`*^9}, {3.597185994699175*^9, 
   3.5971859950013742`*^9}, {3.5971860301476617`*^9, 
   3.5971860452706795`*^9}, {3.597186078665206*^9, 3.597186078752263*^9}, {
   3.5971892053322477`*^9, 3.597189336004611*^9}, {3.5971893927822204`*^9, 
   3.597189417334485*^9}, {3.597189473956994*^9, 3.597189717467306*^9}, {
   3.5971897479635077`*^9, 3.597190052918524*^9}, {3.597190139403817*^9, 
   3.5971902866023283`*^9}, {3.59719033889997*^9, 3.597190374853788*^9}, {
   3.5971904405533094`*^9, 3.597190478673562*^9}, {3.597190545603901*^9, 
   3.5971905889155912`*^9}, {3.597190659176135*^9, 3.597190722304956*^9}, {
   3.5971907742313538`*^9, 3.5971907912146025`*^9}, {3.597190830879879*^9, 
   3.597190831077009*^9}, {3.5971909225566096`*^9, 3.597191023853509*^9}, 
   3.5971910751174684`*^9, {3.5971911096283293`*^9, 3.5971911650740595`*^9}, {
   3.5971912366754923`*^9, 3.5971912492248044`*^9}, 3.600020895770561*^9, {
   3.600020936956932*^9, 3.6000212303378963`*^9}, {3.600021329812002*^9, 
   3.6000213783542643`*^9}, {3.6000214343094463`*^9, 
   3.6000214637450113`*^9}, {3.6000215269410048`*^9, 3.6000216519250636`*^9}, 
   3.6000216880170527`*^9, 3.6000217236717443`*^9, {3.6000217632230268`*^9, 
   3.6000218428869686`*^9}, {3.600024727559367*^9, 3.600024746458926*^9}, {
   3.600024787300068*^9, 3.600024813167258*^9}, {3.600024862017721*^9, 
   3.6000250978504457`*^9}, {3.600025146817988*^9, 3.6000251879263077`*^9}, {
   3.6000252308518333`*^9, 3.6000253610833797`*^9}, 3.600025434559207*^9, {
   3.600025465821985*^9, 3.6000254743506503`*^9}, {3.600025542623021*^9, 
   3.6000255882613516`*^9}, {3.600025708223072*^9, 3.600025761590541*^9}, {
   3.6000258769261837`*^9, 3.600025887954517*^9}, {3.600025918699949*^9, 
   3.6000259993775606`*^9}, 3.6000311580667915`*^9, {3.6000312153788815`*^9, 
   3.6000312162964907`*^9}, {3.6000312923520327`*^9, 3.600031537100685*^9}, {
   3.600031578300061*^9, 3.600031633258583*^9}, {3.6000317017280846`*^9, 
   3.6000317133438044`*^9}, {3.6000318263144226`*^9, 3.6000318465858917`*^9}, 
   3.6000320215709352`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NP = \"\>", "\[InvisibleSpace]", "10000"}],
  SequenceForm["NP = ", 10000],
  Editable->False]], "Print",
 CellChangeTimes->{3.60003186346811*^9, 3.6000320222423773`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NS = \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["NS = ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.60003186346811*^9, 3.6000320222493834`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"PrimeNP (NP-th prime number) = \"\>", "\[InvisibleSpace]", 
   "104729"}],
  SequenceForm["PrimeNP (NP-th prime number) = ", 104729],
  Editable->False]], "Print",
 CellChangeTimes->{3.60003186346811*^9, 3.6000320222553883`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NSMAXSQ (square root of NP-th prime number) = \"\>", 
   "\[InvisibleSpace]", "323"}],
  SequenceForm["NSMAXSQ (square root of NP-th prime number) = ", 323],
  Editable->False]], "Print",
 CellChangeTimes->{3.60003186346811*^9, 3.6000320222583895`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NSMAX = \"\>", "\[InvisibleSpace]", "104729"}],
  SequenceForm["NSMAX = ", 104729],
  Editable->False]], "Print",
 CellChangeTimes->{3.60003186346811*^9, 3.6000320222613907`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"===========================\"\>", 
   "\[InvisibleSpace]", "\<\"===========================\"\>"}],
  SequenceForm["===========================", "==========================="],
  Editable->False]], "Print",
 CellChangeTimes->{3.60003186346811*^9, 3.6000320222633915`*^9}],

Cell[BoxData["\<\"MaxGaloisInt\"\>"], "Print",
 CellChangeTimes->{3.60003186346811*^9, 3.6000320222653933`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"MaxGaloisInt[\"\>", "\[InvisibleSpace]", "10000", 
   "\[InvisibleSpace]", "\<\"] = \"\>", "\[InvisibleSpace]", "52"}],
  SequenceForm["MaxGaloisInt[", 10000, "] = ", 52],
  Editable->False]], "Print",
 CellChangeTimes->{3.60003186346811*^9, 3.600032024824174*^9}],

Cell[BoxData["\<\"MaxGaloisIntArr\"\>"], "Print",
 CellChangeTimes->{3.60003186346811*^9, 3.6000320248271756`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"MaxGaloisIntArr = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", ",", "4", ",", "4",
      ",", "4", ",", "4", ",", "4", ",", "5", ",", "5", ",", "5", ",", "6", 
     ",", "6", ",", "5", ",", "5", ",", "6", ",", "5", ",", "6", ",", "5", 
     ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", 
     ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "8", 
     ",", "8", ",", "7", ",", "7", ",", "7", ",", "8", ",", "7", ",", "8", 
     ",", "8", ",", "7", ",", "8", ",", "7", ",", "7", ",", "9", ",", "9", 
     ",", "8", ",", "7", ",", "8", ",", "7", ",", "8", ",", "8", ",", "9", 
     ",", "8", ",", "9", ",", "8", ",", "9", ",", "10", ",", "9", ",", "8", 
     ",", "8", ",", "9", ",", "9", ",", "8", ",", "10", ",", "9", ",", "8", 
     ",", "8", ",", "8", ",", "10", ",", "9", ",", "8", ",", "9", ",", "9", 
     ",", "10", ",", "10", ",", "10", ",", "9", ",", "9", ",", "9", ",", "9", 
     ",", "10", ",", "9", ",", "10", ",", "10", ",", "10", ",", "9", ",", 
     "10", ",", "9", ",", "10", ",", "10", ",", "9", ",", "10", ",", "9", ",",
      "9", ",", "9", ",", "11", ",", "9", ",", "11", ",", "10", ",", "10", 
     ",", "12", ",", "12", ",", "11", ",", "10", ",", "10", ",", "11", ",", 
     "11", ",", "11", ",", "10", ",", "10", ",", "10", ",", "13", ",", "11", 
     ",", "13", ",", "10", ",", "10", ",", "11", ",", "13", ",", "11", ",", 
     "10", ",", "10", ",", "10", ",", "10", ",", "11", ",", "12", ",", "10", 
     ",", "12", ",", "10", ",", "11", ",", "10", ",", "10", ",", "13", ",", 
     "13", ",", "13", ",", "10", ",", "13", ",", "13", ",", "11", ",", "11", 
     ",", "12", ",", "12", ",", "12", ",", "11", ",", "11", ",", "12", ",", 
     "12", ",", "11", ",", "13", ",", "12", ",", "13", ",", "12", ",", "13", 
     ",", "13", ",", "12", ",", "14", ",", "11", ",", "13", ",", "11", ",", 
     "12", ",", "13", ",", "12", ",", "11", ",", "12", ",", "12", ",", "11", 
     ",", "12", ",", "12", ",", "12", ",", "11", ",", "13", ",", "13", ",", 
     "13", ",", "14", ",", "13", ",", "12", ",", "14", ",", "12", ",", "12", 
     ",", "14", ",", "12", ",", "14", ",", "12", ",", "14", ",", "12", ",", 
     "12", ",", "12", ",", "12", ",", "13", ",", "13", ",", "12", ",", "13", 
     ",", "12", ",", "12", ",", "14", ",", "12", ",", "14", ",", "14", ",", 
     "12", ",", "12", ",", "12", ",", "13", ",", "15", ",", "12", ",", "13", 
     ",", "14", ",", "12", ",", "13", ",", "14", ",", "12", ",", "12", ",", 
     "12", ",", "13", ",", "14", ",", "12", ",", "14", ",", "12", ",", "14", 
     ",", "15", ",", "15", ",", "12", ",", "12", ",", "15", ",", "12", ",", 
     "15", ",", "12", ",", "14", ",", "14", ",", "13", ",", "13", ",", "13", 
     ",", "14", ",", "15", ",", "13", ",", "14", ",", "14", ",", "13", ",", 
     "15", ",", "14", ",", "13", ",", "14", ",", "13", ",", "14", ",", "13", 
     ",", "14", ",", "14", ",", "14", ",", "15", ",", "14", ",", "14", ",", 
     "13", ",", "15", ",", "14", ",", "14", ",", "13", ",", "17", ",", "13", 
     ",", "14", ",", "14", ",", "14", ",", "15", ",", "15", ",", "14", ",", 
     "14", ",", "14", ",", "16", ",", "13", ",", "16", ",", "15", ",", "15", 
     ",", "14", ",", "15", ",", "15", ",", "15", ",", "15", ",", "15", ",", 
     "16", ",", "15", ",", "13", ",", "14", ",", "16", ",", "13", ",", "15", 
     ",", "14", ",", "17", ",", "14", ",", "16", ",", "15", ",", "17", ",", 
     "14", ",", "14", ",", "15", ",", "15", ",", "14", ",", "15", ",", "14", 
     ",", "15", ",", "15", ",", "16", ",", "14", ",", "15", ",", "14", ",", 
     "15", ",", "14", ",", "15", ",", "15", ",", "16", ",", "15", ",", "16", 
     ",", "15", ",", "14", ",", "17", ",", "14", ",", "16", ",", "14", ",", 
     "14", ",", "15", ",", "17", ",", "14", ",", "14", ",", "18", ",", "15", 
     ",", "16", ",", "15", ",", "15", ",", "14", ",", "15", ",", "15", ",", 
     "14", ",", "16", ",", "15", ",", "14", ",", "14", ",", "16", ",", "14", 
     ",", "16", ",", "15", ",", "14", ",", "14", ",", "14", ",", "16", ",", 
     "14", ",", "15", ",", "17", ",", "14", ",", "15", ",", "15", ",", "17", 
     ",", "16", ",", "15", ",", "18", ",", "17", ",", "15", ",", "17", ",", 
     "15", ",", "19", ",", "19", ",", "19", ",", "15", ",", "15", ",", "16", 
     ",", "15", ",", "15", ",", "15", ",", "15", ",", "16", ",", "18", ",", 
     "16", ",", "15", ",", "15", ",", "16", ",", "15", ",", "16", ",", "16", 
     ",", "15", ",", "17", ",", "16", ",", "17", ",", "18", ",", "16", ",", 
     "16", ",", "18", ",", "15", ",", "18", ",", "17", ",", "16", ",", "16", 
     ",", "19", ",", "15", ",", "17", ",", "19", ",", "18", ",", "16", ",", 
     "15", ",", "15", ",", "17", ",", "18", ",", "16", ",", "16", ",", "18", 
     ",", "15", ",", "15", ",", "19", ",", "16", ",", "17", ",", "15", ",", 
     "16", ",", "17", ",", "17", ",", "15", ",", "17", ",", "18", ",", "15", 
     ",", "17", ",", "16", ",", "18", ",", "15", ",", "18", ",", "16", ",", 
     "15", ",", "18", ",", "17", ",", "19", ",", "18", ",", "18", ",", "19", 
     ",", "18", ",", "17", ",", "18", ",", "16", ",", "18", ",", "16", ",", 
     "19", ",", "17", ",", "20", ",", "17", ",", "19", ",", "16", ",", "17", 
     ",", "16", ",", "16", ",", "16", ",", "17", ",", "16", ",", "16", ",", 
     "17", ",", "18", ",", "19", ",", "18", ",", "19", ",", "16", ",", "18", 
     ",", "17", ",", "19", ",", "19", ",", "18", ",", "18", ",", "19", ",", 
     "17", ",", "17", ",", "19", ",", "16", ",", "20", ",", "19", ",", "16", 
     ",", "17", ",", "16", ",", "17", ",", "16", ",", "16", ",", "21", ",", 
     "20", ",", "21", ",", "16", ",", "16", ",", "21", ",", "17", ",", "17", 
     ",", "16", ",", "19", ",", "19", ",", "17", ",", "17", ",", "18", ",", 
     "19", ",", "18", ",", "17", ",", "18", ",", "18", ",", "19", ",", "19", 
     ",", "20", ",", "18", ",", "19", ",", "20", ",", "17", ",", "18", ",", 
     "16", ",", "19", ",", "19", ",", "19", ",", "18", ",", "17", ",", "19", 
     ",", "17", ",", "19", ",", "20", ",", "17", ",", "17", ",", "20", ",", 
     "17", ",", "20", ",", "19", ",", "18", ",", "19", ",", "18", ",", "21", 
     ",", "17", ",", "18", ",", "22", ",", "21", ",", "18", ",", "17", ",", 
     "18", ",", "19", ",", "19", ",", "17", ",", "18", ",", "21", ",", "18", 
     ",", "18", ",", "20", ",", "17", ",", "20", ",", "18", ",", "18", ",", 
     "17", ",", "19", ",", "20", ",", "18", ",", "19", ",", "19", ",", "17", 
     ",", "21", ",", "19", ",", "19", ",", "20", ",", "20", ",", "19", ",", 
     "17", ",", "20", ",", "20", ",", "19", ",", "18", ",", "18", ",", "20", 
     ",", "21", ",", "17", ",", "21", ",", "21", ",", "20", ",", "21", ",", 
     "19", ",", "22", ",", "21", ",", "18", ",", "21", ",", "18", ",", "18", 
     ",", "18", ",", "19", ",", "18", ",", "17", ",", "19", ",", "18", ",", 
     "18", ",", "19", ",", "20", ",", "19", ",", "19", ",", "20", ",", "19", 
     ",", "19", ",", "17", ",", "21", ",", "19", ",", "21", ",", "18", ",", 
     "18", ",", "19", ",", "18", ",", "20", ",", "18", ",", "18", ",", "20", 
     ",", "18", ",", "20", ",", "20", ",", "20", ",", "18", ",", "21", ",", 
     "20", ",", "18", ",", "18", ",", "18", ",", "21", ",", "22", ",", "21", 
     ",", "18", ",", "18", ",", "19", ",", "22", ",", "22", ",", "19", ",", 
     "23", ",", "20", ",", "18", ",", "19", ",", "20", ",", "20", ",", "19", 
     ",", "19", ",", "18", ",", "22", ",", "23", ",", "19", ",", "18", ",", 
     "19", ",", "18", ",", "19", ",", "20", ",", "20", ",", "20", ",", "19", 
     ",", "18", ",", "18", ",", "20", ",", "20", ",", "18", ",", "18", ",", 
     "21", ",", "20", ",", "20", ",", "21", ",", "20", ",", "21", ",", "18", 
     ",", "21", ",", "18", ",", "21", ",", "19", ",", "21", ",", "19", ",", 
     "18", ",", "18", ",", "20", ",", "20", ",", "18", ",", "19", ",", "18", 
     ",", "18", ",", "21", ",", "18", ",", "21", ",", "19", ",", "18", ",", 
     "23", ",", "22", ",", "18", ",", "18", ",", "18", ",", "24", ",", "18", 
     ",", "18", ",", "20", ",", "21", ",", "20", ",", "20", ",", "21", ",", 
     "18", ",", "20", ",", "18", ",", "22", ",", "18", ",", "21", ",", "20", 
     ",", "19", ",", "20", ",", "21", ",", "19", ",", "21", ",", "21", ",", 
     "20", ",", "19", ",", "21", ",", "20", ",", "19", ",", "20", ",", "19", 
     ",", "21", ",", "20", ",", "21", ",", "22", ",", "21", ",", "20", ",", 
     "22", ",", "21", ",", "20", ",", "22", ",", "19", ",", "19", ",", "20", 
     ",", "22", ",", "20", ",", "20", ",", "20", ",", "23", ",", "19", ",", 
     "20", ",", "20", ",", "20", ",", "20", ",", "20", ",", "24", ",", "20", 
     ",", "20", ",", "21", ",", "23", ",", "20", ",", "20", ",", "21", ",", 
     "23", ",", "20", ",", "22", ",", "19", ",", "20", ",", "20", ",", "21", 
     ",", "21", ",", "21", ",", "20", ",", "20", ",", "21", ",", "20", ",", 
     "21", ",", "21", ",", "19", ",", "21", ",", "20", ",", "19", ",", "20", 
     ",", "20", ",", "23", ",", "20", ",", "22", ",", "22", ",", "20", ",", 
     "22", ",", "19", ",", "20", ",", "22", ",", "20", ",", "23", ",", "22", 
     ",", "19", ",", "21", ",", "20", ",", "23", ",", "22", ",", "20", ",", 
     "20", ",", "21", ",", "21", ",", "21", ",", "19", ",", "20", ",", "23", 
     ",", "20", ",", "21", ",", "21", ",", "22", ",", "21", ",", "25", ",", 
     "19", ",", "21", ",", "22", ",", "21", ",", "22", ",", "19", ",", "21", 
     ",", "21", ",", "20", ",", "21", ",", "20", ",", "21", ",", "21", ",", 
     "22", ",", "21", ",", "22", ",", "21", ",", "21", ",", "20", ",", "22", 
     ",", "23", ",", "21", ",", "20", ",", "22", ",", "22", ",", "21", ",", 
     "24", ",", "22", ",", "22", ",", "21", ",", "22", ",", "20", ",", "20", 
     ",", "22", ",", "22", ",", "21", ",", "23", ",", "22", ",", "21", ",", 
     "22", ",", "20", ",", "20", ",", "23", ",", "23", ",", "20", ",", "23", 
     ",", "23", ",", "20", ",", "21", ",", "21", ",", "24", ",", "21", ",", 
     "24", ",", "20", ",", "21", ",", "20", ",", "21", ",", "24", ",", "21", 
     ",", "21", ",", "25", ",", "24", ",", "21", ",", "22", ",", "20", ",", 
     "20", ",", "23", ",", "20", ",", "21", ",", "24", ",", "20", ",", "20", 
     ",", "23", ",", "20", ",", "22", ",", "22", ",", "20", ",", "24", ",", 
     "22", ",", "20", ",", "22", ",", "23", ",", "20", ",", "21", ",", "20", 
     ",", "20", ",", "24", ",", "24", ",", "21", ",", "21", ",", "21", ",", 
     "23", ",", "23", ",", "20", ",", "23", ",", "22", ",", "21", ",", "24", 
     ",", "22", ",", "20", ",", "21", ",", "21", ",", "24", ",", "23", ",", 
     "21", ",", "20", ",", "20", ",", "23", ",", "21", ",", "22", ",", "24", 
     ",", "21", ",", "22", ",", "20", ",", "21", ",", "20", ",", "24", ",", 
     "20", ",", "22", ",", "21", ",", "25", ",", "20", ",", "22", ",", "22", 
     ",", "20", ",", "22", ",", "22", ",", "22", ",", "20", ",", "23", ",", 
     "25", ",", "22", ",", "25", ",", "26", ",", "22", ",", "20", ",", "24", 
     ",", "22", ",", "21", ",", "21", ",", "24", ",", "22", ",", "24", ",", 
     "21", ",", "21", ",", "24", ",", "21", ",", "23", ",", "21", ",", "21", 
     ",", "21", ",", "21", ",", "21", ",", "22", ",", "21", ",", "23", ",", 
     "21", ",", "22", ",", "21", ",", "22", ",", "24", ",", "24", ",", "21", 
     ",", "24", ",", "21", ",", "22", ",", "25", ",", "21", ",", "21", ",", 
     "22", ",", "22", ",", "21", ",", "21", ",", "25", ",", "25", ",", "24", 
     ",", "22", ",", "22", ",", "21", ",", "24", ",", "25", ",", "23", ",", 
     "21", ",", "25", ",", "25", ",", "25", ",", "22", ",", "21", ",", "26", 
     ",", "22", ",", "22", ",", "26", ",", "22", ",", "21", ",", "22", ",", 
     "23", ",", "24", ",", "27", ",", "22", ",", "23", ",", "23", ",", "23", 
     ",", "22", ",", "23", ",", "21", ",", "23", ",", "22", ",", "22", ",", 
     "22", ",", "26", ",", "22", ",", "25", ",", "22"}], "}"}]}],
  SequenceForm["MaxGaloisIntArr = ", CompressedData["
1:eJxNjl2C2zAIhNOk2cS2ZP2C7PSpV+oR9gJ77R6j3yj7UCEhGIaB359ffz5/
XC6Xv7fL5Xq93m4/57nf7x8fPNn/5/l8PB7PBx/BsjxnvMjWhWB56pNblnVd
F846A/lF+bZs6xoCbttwa9wiYVS4bmENK1GMkbdtAR5uiwGLYYdGJEQVWDtg
4Mo4UUQlymIKcdcNclhKISRs39WZIn/a47R9TzPbY5kJ0Z5j5k86GXKmXPac
yiyrkPfvH1OJAsWa3m1Q0Ziej0pKJadaUkmtNXVJuObZj2wuNecKIeeWSlPh
jaSWS8qFxgoLhlRara1Sr7mVXmDkrFdAW6asegHvKlGwbrhScgOerbW1XltH
g3XoKMRIdQSqleoGB3K1WkErjK7caOvMhFe7FUO4wYUlVY3tTReiCaKz1957
NaJqLtC9Dc2GVn1oIPEUhGO9o4kgAm8Ir6wOR+HQWCioOtzGeHZoinDod11W
cCSHdHs/4I/5HMDsPcJmUwd04d6HgwyfjAZuqJ0N5xphM3ciHzy3gwcZP2Yw
hq7ZYYfIh9l5TJz4e8zBpKH1D6qmBsmoB8k+zNVg7MvguRZvnH6+1AqLOrrD
dBirfVCi6SSHcJ5a6jgH0en2cn9BGccvH2Ow9nAhp/8DIyZEyw==
   "]],
  Editable->False]], "Print",
 CellChangeTimes->{3.60003186346811*^9, 3.6000321333859005`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1382, 1197},
WindowMargins->{{Automatic, 202}, {79, Automatic}},
Magnification->1.5,
FrontEndVersion->"7.0 for Microsoft Windows (64-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 30067, 700, 6065, "Input"],
Cell[CellGroupData[{
Cell[30659, 726, 219, 5, 32, "Print"],
Cell[30881, 733, 211, 5, 32, "Print"],
Cell[31095, 740, 277, 6, 32, "Print"],
Cell[31375, 748, 301, 6, 32, "Print"],
Cell[31679, 756, 227, 5, 32, "Print"],
Cell[31909, 763, 321, 6, 32, "Print"],
Cell[32233, 771, 111, 1, 32, "Print"],
Cell[32347, 774, 313, 6, 32, "Print"],
Cell[32663, 782, 114, 1, 32, "Print"],
Cell[32780, 785, 12782, 172, 883, "Print"]
}, Open  ]]
}, Open  ]]
}
]
*)
", "7914", "}"}], "7919"]], "Output",
 CellChangeTimes->{
  3.5971296853167295`*^9, {3.5971297566930127`*^9, 3.5971297757646465`*^9}, {
   3.597129823534292*^9, 3.597129976235446*^9}, {3.5971300089381113`*^9, 
   3.5971300575473123`*^9}, 3.597130093460102*^9, {3.597130203770177*^9, 
   3.597130219580649*^9}}],

Cell[BoxData["\<\"xm1dN\"\>"], "Print",
 CellChangeTimes->{{3.5971302037641726`*^9, 3.59713021958265*^9}}],

Cell[BoxData[
 SubscriptBox[
  RowBox[{"{", "6335", "}"}], "7919"]], "Output",
 CellChangeTimes->{
  3.5971296853167295`*^9, {3.5971297566930127`*^9, 3.5971297757646465`*^9}, {
   3.597129823534292*^9, 3.597129976235446*^9}, {3.5971300089381113`*^9, 
   3.5971300575473123`*^9}, 3.597130093460102*^9, {3.597130203770177*^9, 
   3.5971302195856524`*^9}}]
}, Open  ]]
},
WindowSize->{1382, 1005},
WindowMargins->{{60, Automatic}, {Automatic, 76}},
Magnification->1.5,
FrontEndVersion->"7.0 for Microsoft Windows (64-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 2334, 68, 638, "Input"],
Cell[2904, 92, 103, 1, 32, "Print"],
Cell[3010, 95, 347, 7, 42, "Output"],
Cell[3360, 104, 108, 1, 32, "Print"],
Cell[3471, 107, 353, 7, 42, "Output"],
Cell[3827, 116, 107, 1, 32, "Print"],
Cell[3937, 119, 349, 7, 42, "Output"],
Cell[4289, 128, 106, 1, 32, "Print"],
Cell[4398, 131, 353, 7, 42, "Output"],
Cell[4754, 140, 108, 1, 32, "Print"],
Cell[4865, 143, 351, 7, 42, "Output"],
Cell[5219, 152, 106, 1, 32, "Print"],
Cell[5328, 155, 353, 7, 42, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
